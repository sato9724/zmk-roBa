#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 2 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer0 {
            bindings = <
&mt Y I                 &mt Q U         &mt W E  &mt R O         &mt P T                                                        &mt Y I          &mt Q U  &mt W E    &mt R O    &mt P T
&mt SLASH A             &mt J D         &mt F K  &mt G L         &lt 1 RETURN   &trans                  &mt SLASH A             &mt H S          &mt J D  &mt F K    &mt G L    &lt 1 RETURN
&mt MINUS Z             &mt X N         &mt C M  &kp B           &kp BACKSPACE  &mt LEFT_ALT GRAVE      &mt MINUS Z             &mt X N          &mt C M  &mkp LCLK  &mkp RCLK  &kp BACKSPACE
&lt_to_layer_0 2 SPACE  &kp LEFT_SHIFT  &kp V    &kp LEFT_SHIFT  &to 2          &kp LEFT_CONTROL        &lt_to_layer_0 2 SPACE  &kp RIGHT_SHIFT                                 &mt RIGHT_ALT GRAVE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Layer1 {
            bindings = <
&kp N9        &kp N8        &kp N7        &mt COLON LEFT_BRACKET  &trans                            &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &mt COLON LEFT_BRACKET  &trans
&kp NUMBER_6  &kp N5        &kp NUMBER_4  &mt COMMA PERIOD        &trans  &trans      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &mt COMMA PERIOD        &trans
&kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1  &kp N0                  &trans  &trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp V         &kp B                   &trans
&trans        &trans        &trans        &trans                  &trans  &trans      &trans        &trans                                                            &trans
            >;
        };

        Layer2 {
            bindings = <
&kp C_BRI_DN                 &kp C_BRI_UP     &kp F7  &kp F5        &kp F2                                           &kp C_BRI_DEC    &kp C_BRI_UP  &kp F7  &kp F5        &kp F2
&kp C_VOLUME_DOWN            &kp C_VOLUME_UP  &kp V   &kp LEFT_GUI  &kp D   &trans      &kp C_VOLUME_DOWN            &kp C_VOLUME_UP  &kp V         &kp Z   &kp LEFT_GUI  &kp D
&mt LEFT_CONTROL LEFT_ARROW  &kp RIGHT_ARROW  &kp C   &kp Z         &trans  &trans      &mt LEFT_CONTROL LEFT_ARROW  &kp RIGHT_ARROW  &kp C         &trans  &trans        &trans
&trans                       &trans           &trans  &trans        &trans  &trans      &trans                       &trans                                               &trans
            >;
        };
    };
};
